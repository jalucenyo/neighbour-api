<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.lucenyo</groupId>
    <artifactId>neighbour-api</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>neighbour-api</name>
    <description>neighbour-api</description>
    <properties>
        <java.version>17</java.version>
        <kotlin.version>1.6.21</kotlin.version>
        <kotlinx-coroutines.version>1.6.4</kotlinx-coroutines.version>
        <org.mapstruct.version>1.5.3.Final</org.mapstruct.version>
        <testcontainers.version>1.17.4</testcontainers.version>
        <grpc.kotlin.version>1.3.0</grpc.kotlin.version>
        <java.grpc.version>1.50.2</java.grpc.version>
        <protobuf.protoc.version>3.20.1</protobuf.protoc.version>
        <protobuf.version>3.21.9</protobuf.version>
    </properties>
    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.springframework.security.oauth</groupId>-->
<!--            <artifactId>spring-security-oauth2</artifactId>-->
<!--        </dependency>-->
<!--        org.springframework.security.oauth:spring-security-oauth2-->

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlinx-coroutines.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactor</artifactId>
            <version>${kotlinx-coroutines.version}</version>
        </dependency>


        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-couchbase</artifactId>
<!--            <version>5.0.0</version>-->
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.6.12</version>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

        <dependency>
            <groupId>net.devh</groupId>
            <artifactId>grpc-client-spring-boot-starter</artifactId>
            <version>2.12.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-kotlin-stub</artifactId>
            <version>${grpc.kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${java.grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-kotlin</artifactId>
            <version>${protobuf.version}</version>
        </dependency>

        <!-- Monitorization -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>couchbase</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>

        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.0</version>
            </extension>
        </extensions>

        <plugins>

            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>6.2.0</version>
                <executions>

                    <execution>
                        <id>openapi-generate-incidents</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/contracts/incidents.yaml
                            </inputSpec>
                            <generatorName>kotlin-spring</generatorName>
                            <configOptions>
                                <basePackage>com.lucenyo.neighbour.shared</basePackage>
                                <apiPackage>com.lucenyo.neighbour.incidents.infrastructure.rest</apiPackage>
                                <modelPackage>com.lucenyo.neighbour.incidents.infrastructure.rest.model</modelPackage>
                                <interfaceOnly>true</interfaceOnly>
                                <useTags>true</useTags>
                                <exceptionHandler>false</exceptionHandler>
                                <gradleBuildFile>false</gradleBuildFile>
                                <documentationProvider>none</documentationProvider>
                                <enumPropertyNaming>original</enumPropertyNaming>
                            </configOptions>
                        </configuration>
                    </execution>

                    <execution>
                        <id>openapi-generate-community</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/contracts/community.yaml
                            </inputSpec>
                            <generatorName>kotlin-spring</generatorName>
                            <configOptions>
                                <basePackage>com.lucenyo.neighbour.shared</basePackage>
                                <apiPackage>com.lucenyo.neighbour.community.infrastructure.rest</apiPackage>
                                <modelPackage>com.lucenyo.neighbour.community.infrastructure.rest.model</modelPackage>
                                <interfaceOnly>true</interfaceOnly>
                                <useTags>true</useTags>
                                <exceptionHandler>false</exceptionHandler>
                                <gradleBuildFile>false</gradleBuildFile>
                                <documentationProvider>none</documentationProvider>
                                <enumPropertyNaming>original</enumPropertyNaming>
                            </configOptions>
                        </configuration>
                    </execution>

                    <execution>
                        <id>openapi-generate-people</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/contracts/people.yaml
                            </inputSpec>
                            <generatorName>kotlin-spring</generatorName>
                            <configOptions>
                                <basePackage>com.lucenyo.neighbour.shared</basePackage>
                                <apiPackage>com.lucenyo.neighbour.people.infrastructure.rest</apiPackage>
                                <modelPackage>com.lucenyo.neighbour.people.infrastructure.rest.model</modelPackage>
                                <interfaceOnly>true</interfaceOnly>
                                <useTags>true</useTags>
                                <exceptionHandler>false</exceptionHandler>
                                <gradleBuildFile>false</gradleBuildFile>
                                <documentationProvider>none</documentationProvider>
                                <enumPropertyNaming>original</enumPropertyNaming>
                            </configOptions>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                        <configuration>
                            <protocArtifact>com.google.protobuf:protoc:${protobuf.protoc.version}:exe:${os.detected.classifier}</protocArtifact>
                            <pluginId>grpc-java</pluginId>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${java.grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                            <protocPlugins>
                                <protocPlugin>
                                    <id>grpc-kotlin</id>
                                    <groupId>io.grpc</groupId>
                                    <artifactId>protoc-gen-grpc-kotlin</artifactId>
                                    <version>${grpc.kotlin.version}</version>
                                    <classifier>jdk8</classifier>
                                    <mainClass>io.grpc.kotlin.generator.GeneratorRunner</mainClass>
                                </protocPlugin>
                            </protocPlugins>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile-kt</id>
                        <goals>
                            <goal>compile-custom</goal>
                        </goals>
                        <configuration>
                            <protocArtifact>com.google.protobuf:protoc:${protobuf.protoc.version}:exe:${os.detected.classifier}
                            </protocArtifact>
                            <outputDirectory>${project.build.directory}/generated-sources/protobuf/kotlin</outputDirectory>
                            <pluginId>kotlin</pluginId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.lucenyo.neighbour.ApplicationKt</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                        <plugin>jpa</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.build.directory}/generated-sources/kotlin/src/main/kotlin</sourceDir>
<!--                                <sourceDir>${project.build.directory}/generated-sources/protobuf/kotlin</sourceDir>-->
<!--                                <sourceDir>${project.build.directory}/generated-sources/protobuf/java</sourceDir>-->
<!--                                <sourceDir>${project.build.directory}/generated-sources/protobuf/grpc-java</sourceDir>-->
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.build.directory}/generated-sources/kotlin/src/main/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
